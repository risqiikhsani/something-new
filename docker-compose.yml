# version: '3.8'
# services:
#   db:
#     container_name: pg_container
#     image: postgres
#     restart: always
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       # POSTGRES_DB: test_db
#     ports:
#       - "5432:5432"
#     volumes:
#       - local_pgdata:/var/lib/postgresql/data
#   pgadmin:
#     container_name: pgadmin4_container
#     image: dpage/pgadmin4
#     restart: always
#     environment:
#       PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
#       PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
#     ports:
#       - "80:80"
#     volumes:
#       - pgadmin-data:/var/lib/pgadmin
#   redis:
#       container_name: redis_container
#       image: redis:5
#       ports:
#         - '6379:6379'


# volumes:
#   local_pgdata:
#   pgadmin-data:

version: '3.8'
services:
  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "80:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  redis:
    container_name: redis_container
    image: redis:5
    ports:
      - '6379:6379'

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3-management
    ports:
      - '5672:5672'  # RabbitMQ
      - '15672:15672'  # RabbitMQ Management Plugin
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}

  celery_worker:
    container_name: celery_worker_container
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A something.celery worker -l info --concurrency=4
    depends_on:
      - db
      - rabbitmq
    volumes:
      - .:/app

  django_app:
    container_name: django_app_container
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db
      - redis
      - rabbitmq
      - celery_worker
    ports:
      - "8000:8000"
    volumes:
      - .:/app

volumes:
  local_pgdata:
  pgadmin-data:
